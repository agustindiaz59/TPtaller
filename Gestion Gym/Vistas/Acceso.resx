<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADwIQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAIbdJ
        REFUeNrtnXtwldW1wH85CSEhQBKBICioECnIS0Ws0FadtmrVa719WLXIeGfq7cNRp1xr/Ud75461/uP0
        OrVjW2071/FKdbSttaP2Wkt9tEq1IuBzkIeA4SUYEvIEktw/1jrkEImcvb/3Oes3800yYs75vrXXWt/e
        a6+1dgVGFhkB1AKjgHrgOGAKMBFoBBr0atSrHhgJVBdcI/QnwH7ggP7MX71AG9Cq1169WoGdwFagRf+f
        LqBbP8PIEBUmglRTCdQBY4GpwHRgmhr8ZL3GqyOoUSOvivieDqpz6FHD3w1s06sF2AhsALYA7UAn0GdD
        aQ7AODqj1aBnArOBZr1OQt7koxl8a6eV/UAHMlPYBKzX603gHXUYHTbU5gAMmZpPAeYA8/SaBUwAxpTY
        s+4DPgDeBtbq9QaylGgzVTAHUA5UA03AfGAxsAh52zciU/hyogeZJbwDvAS8CKwBdiGzCMMcQEkwClm7
        f0oNfiHy1h9tojmMDmQ28Io6hL8jsYQuE405gKxRiwTrzgE+D5wJHIsE9Yyj0wfsAF4GngGeQ4KL3SYa
        cwBppUqN/lzgPOAsYJIZfSjOYDuwEvgz8Kw6g4MmGnMAaaAR+CTwReB84ASi34orVw4Cm4GngceBfyBx
        BMMcQKxUAjOAL6jhn47s1Rvx0Q6sUkfwJ2Adlm9gDiBiaoAFwBXAxcjbPmdiSZR+ZFbwBPAQ8Cqyw2CY
        AwiNeuBs4EokqDchY/ffp1e/XgMFv4M4sZzqQ/73SrIXv/gACRr+Bngeyy8wBxCQccBFwBJk3z5tyTn9
        SGQ8n5a7S6+9qvz5n21ISu4BBnP+87+D1AXkawPyv9chjq8eqSvI/2zSK59+XEv6ZkH7kLyCB4EngT2m
        yuYAXGgELgS+oYafdJJOvxrwPuB9JLV2E4M5+NuRAp0OJE8/b9xhrYkrCxzDSCSHYSKyy5GvSTgJSVs+
        HnGUdSlwDD3qCH4FPIUFDM0BHIV6JJJ/DfAZ5O2WBN2qrO8iKbPr1Og3Im+zvKGnibxjGIdshzYjgdJ5
        wMmIU01Sni8Av0R2EGxpYA7gMGqAzwHfQfbx62L+/h4k8eV1JB02nye/HYl292dUrjlkd2QSg/UO84G5
        SGJU3DOrTiSP4GfAX7BgYdk7gArgNOBa4CvIGjcOBhh8w69EUl9fVYPvLHGZ16lDWICkRp/F4AwhLn3c
        C/wWuAd4TcfDKDOmAj9A1tIDMV07kbXoTUhsYTzl7YQrVAaLVSZPqYziGo9NqgNTzRzKhzpgKVJ00heD
        ku1GUlhvRgqBSq3MN0zGqIxuVpntjmF8+lQXlhL/0s+ImVOBB5BpdpRK1Y1kqd2GTHPrTfTO1KvsblNZ
        dkc8Zp2qG6ea6EuPBuB6ZM0dpRJtBx5GEoYmm9hDY7LK9GGVcZRj+K7qSoOJvTRYDPwB2TaLagr5FnA7
        cAbJbXWVA7Uq49tV5lEt4XpVZxabyLPLGOAGJE88CiXpQaL3y5B9b9tSjY8KlfkyHYOeiMZ4s+qQxW0y
        xixkPReFYnQhySRLkWw4I1km6lg8rWMThaN/QHXKSDnVwGVIMk0UirACqQtoNFGnjkYdmxVE4/jXqG6l
        vStz2TIBuANJsAl7Pfg8cDWS5mqkm3E6Vs8TftynVXUsa9WgJc8c4DHCDwqtRbIEm0zEmaNJx24t4Qd9
        H1OdMxImhzTmWB3yILcgnr7ZRJx5mnUsW0LWkdWqe9YQJiHqkCjwjhAHtQNYjiSgWDPP0qFSx3S5jnFY
        +rJDddAyCGOmCfgp4WaHrUKCSDaYpUudjvGqEPWmW3XRlokxMR14lPDW+x8Cd+nnGuWjQ3fp2IcVF3jU
        dCh6FgB/DWnQ+pEmEZdgWzvlSLWO/QsM9kkMev1VddSIgPMIb39/L3An0r7KKG+OV13YG5JurVFdNUKi
        AknAeI/wtva+hr31jUGqVSfC2jJ8T3XW0sMDkkPSPLeFMCg9SJfYU0ysxjCcojoSRibhNtVd2yb0pApp
        zrkrhMHYCXwPK+owjs4Y1ZUwOhPtUh22o+IcqUZqssOI0q5Bgj3miY1iyanOhBFz+lB12ZacDsZ/I9K6
        OejWzONIJ1rD8GGe6lDQLec21WlzAkehCvGWQY2/C/gxlpxhBKdJdSloqXGb6rYtB4Yhh6yXgk779yDe
        1jrzGGFRqzq1h+DLgWuw5ehHqEAipkEDfluAq7A8fiN8KlW3thA8MLgU2yI8jMsIvtW3FrjARGlEzAUE
        zxfYpjpvIFlT7wUU6ItIP3nDiIOFqnNBk4XKPmNwAcG3Wp5FzpozjDiZq7oXdIu6bGsHphO8sOdpYKbp
        opEQM1UHgxYQlV0VYRNSPhlEcE9gHXuM5GlWXQyiy49SRlvWdUgDhSDJFU8AJ5ruGSnhxIBOoE9touSb
        0eSQFkpBOvk8jb35jfTRTLDlQLfaRknnCFxMsB5+z2JrfiO9zCRYYHCH2khJModg3XtfxKL9RvqZS7At
        wtWUYMvxCUgv9SBJPrbPb2SFhQRLFnqMEjp8pBrpy+4b9NuCZfgZ2eMC/NOG+9RmSqJ68DL8j+vag+Rf
        G0YWuQr/AqJWSiBdeBb+mX5dSAWWFfYYWaVSddi3lHgNGT6VeAxyrLLvFOjHWEmvkX1qVZd9l8APkNFW
        djfg31zxj1gzD6N0aFKd9m1me0PWHngxsBn/iP980xmjxJiP/87AZrWpTNCA/5bfLuBS0xWjRLkU/6Y3
        j6ltpZ7rgF6PB+wFvo+1SzJKl5zquK99XJf2B5wPrMPPwy0HxpqOGCXOWNV1HxtZR4qXx3XA/Z4P9jow
        23TDKBNmq8772Mr9pLRq8Cqgw+OB9gKXm04YZcbl+B1I2kEKk+OmAC97PEw/cjKrHZhglBvVqvs+R5O/
        rDaXCiqAW/BLdHgBO6LbKF+OVxvwSZS7hZS0Fj8N2OjxEB8i568ZRjlzCX6H4WxU20uUkcC9+AUz7sKm
        /oZRrbbgY0P3qg0mxoX4ea9VlGEnVMMYhulqEz6z6AuTuumxyMmpPlHMJTbmhnEYS/DbRXuchPJnvup5
        w8spg+6nhuFIHX4JQh1qi7HSADzlcbMtwCIba8M4IovURlzt6ilirhO4Auj0uNE7sAYfhjEclWojrnbV
        qTYZC8cAz3jc5Fqsn79hHI1m/MqGn1HbjJwluB/s0Qtca2NrGEVxLe4Vg93EEFyvx2/t/zzW4ccwiqVJ
        bcYnFlAf5Y1dDLQ73lQPcLWNqWE4cTXuLfXaifBkoRrgQdy90gpgnI2nYTgxTm3H1d4eVFsNncW4tzPq
        wpJ+DMOXJbi3FN+FQ//AqiL/v0pkm8H1uKK/AU9meADqgYn63PVIoGUPsBPYjVRlGclTCYzXsRqHtOJu
        Az7QsWrL6HM9qTZ0nsPfTFBb/UeY+jkT2ID72n9pBoWeA04HbkW2VlrU6NuRBg47gdeQ89wvAUab/SXG
        aB2Dn+qY7NQxatcxa9ExvFXHNIv9JpfiHgvYQMinaH8X93r/lxCPnCVOBH5E8S3N24FHgLNJSW12mVCh
        Mn+E4oPSm3VsT8zYs05UW3LtF/DdsG6gEfdgRB+wLGOCXgQ8h3vQZQDYCnyThEszy4SRKuutnmP1HNlL
        R1+G+wt4hdpuYC5A1lAuX/4WMC1DAj4beNtTofLXPuAmio+rGO5UqYz3BRyrt3XMs8I0tSmXZ2wjhFO1
        q4B7PAR8O9mZEn8CWBlQoQrrs6/IyHNnkSvw6z9xpGuljn0WqFCbcn3Gewj4QjoZWO/4pduBBRkR7Ejg
        vpAUKn+9CcwwWw2dGSrbMMfqPrKzbFugtuXyfOvVhr35JnDA8UsfJjun+p6P//ntVvUYH75Vcke79qgO
        ZIFatS2X5zugNuz9hY84fmE3cGVGBFoN/DoCpRoA3iVbMZC0M01lGsVY/Zrs9Ka8EvdCvEfwfCHPxj3S
        ugqYnBFhngC8E5FS9QBfN7sNja/jf9T80a53VBeywGTcewdu5WNO3fq4xIhzgEmON/gEsC0jwpwDHBfR
        Z48EzsRyA8KgQmUZ1Vr9ONWFLLBNbcyFSWrLTg5gFPB53Naxe8hW2u9xRBurmExERRllRg3Rziprie5F
        EAVPqq0VS6Xa8igXBzAd8bouvIbsVWaF8UQbqBuPJQaFwUiVZVRURvz5YfOW2poLZzJMG/7hHMCngGMd
        v+QvZKvoojaGz7edgHAMNI6xygptamsuHKs2XZQDqEZSJV2U9wMk9dAwjOhZoTZXLJVq09XFOIAmYKHj
        Da1C0isNw4iet9XmXFjIEdryHckBzMft6OF84cE+GxfDiIV9DBboFcsUte2jOoDFuNW4tyJNCwzDiI+/
        qe0Vy2iO0CloqAOox71U8l1gnY2HYcTKOrU9FxYxpGvwUAcwBfdOIiuRCq20UY2secam8N6MbDBWdSiN
        qcIfqu25MJMhy/uhDmAObk0EepBuJf0pEsyxSOrofUjSxJdMjw1PvqQ6dJ/q1LEpurd+tb0eh79pZEjW
        49Ba4Xm4Za/tAF5NiUDqgC8D1yHBjnwSjvXsM3wZjZThLgAuB9Yg/Qd/h5zHlzSvqg2eWOT/X6M2/lD+
        P+SGPOw8xxt4HalRTprJwH8DP+fwvPF+3CKlhlHIAIOz23x9x89V19JQ9LZdbdCFeRS8FAsdwHhgluOH
        rSF5TzgVuBv4d4bJdzaMEBmluna36l6SdKoNujCLgtTnQgcwE7e+/93IKaZJMhr4T2Tqbxhx8mXVvaSX
        mGvVFotlAgWB/kIHMBsY4/BBrcAbCT/8VVjdvZEcX1cdTJI3cMsHGENBf4C8A6hEziV34V2SXf9PBb6F
        ldwayVGjOpjkUmA77vkAzWrzhxxAnYcDWIscypAUlwBzTQeNhJmrupgU7bgvxZvV5g85gLHASQ4f0I9k
        IiW1/z8K+CxWbmskT6XqYlIBaB9bPElt/pADmIpbAlAn0nI4KZqAU033jJRwKkeotIuR9bjtxjWqzR9y
        ANNxi2buAzYm+MDHAg2md0ZKaCDZLMGNuFXjjlabP+QApuGW7/w+bn3JwmYc2WnlbJQ+1aqTSbFHbdLl
        fqflHcAI3Jsirgc6EnzgGmz9b6SHSpLdjerAfUl+HDCiCumH5prWuAnojeHBqpAjoWYjgYsO4J9IBNNS
        fI20MKA6eSZwBjLF3oQcZbYOOBjx9/fq97kwGaitQqKXLg6gn3h6/08ErgX+DQmw1Oh37wJ2IjMXw0gD
        I4D/UJ1tQmbWPaqr/4Mc0rkz4nvYpvaRc3AAo6qQBgEubZG7Y3AA45Gqqy8PeaAcEmxJU1mmYYzgo+22
        apBI+y3AKcB3gN0RO4BudH+/SBurzyFrAZc9zB6izQDMIdlVX6J4b2YYaSWnuvytiPV5O269AUYBx+WQ
        DiEuAYwuop3OTEWm/RbkM0qFStXpKFOGd6ptFksNMKUKWbe4nGCzi2h3AGboPZUqtcDpKnMLZAoVSCDr
        NUclzhITVbffi+jzO9Q2i+3oPRKYWIVkBVU5OoAodwCmUdp1/ROBXyJBGHMAgw5gO3AxsKFEn3EU0R4Z
        36u2WSxVQGMV7hl1e4EDET5IqR+plUMCr9as9HC6KO2YT9RHnB1Q23ShIefhANoidgDl8Fa0N7+NexQO
        wPVszoYcbkVAIF6mz/TVMFJFH+4zgEYfB5ClE4ANo5xwtc3G/Hq0WPrMARhGqh2Ay+y8PofbFmAf6eiH
        bhjGR+l0dAAjc7iV1fYTbQDQMAx/DuDWGajaHIBhmAMomgFgv8nZMFLJfty2GqvzDUGKxWYAhpFeXGcA
        I2wJYBjl6wCqrdzWMMqYHG5retclg2EY8TECt3qK/TncpvTmAAyjdBzAAdcZQAXWjtsw0kq12mix7Lcl
        gGGUDl5LAHMAhlHGDsClu08lxXcdNQwjXupwa6bTm8Otuq8St+pBwzDio97RAbTlgFaPLzEMI50OwIVW
        HwfQgLXsNoy0UYl7e7/WHO5thOqJNhBYQelTDs9oMon3GUfgPgPYW+XhABr0y3oiepBupKlBqc4y+pG4
        ix1werhhtOGWx541+lS3o3QADT4OoBU5vbTYswGakC5C+yJ6kI1Ii+gxJaoIO4FrsINBhjqAXqI9ci5p
        ulS3o2Kk2maxHARaq1Qhex0dwGiiO+hwnd5TqTqAbuDvZvNlx07V7agY7egAeoGdOWAr7ocKRnl01xbk
        SGVrPW6UCn2q01si/I6JuB/yuzUHtOB+qOCkCB+kH/gF8HtKe01olAf9qsu/iFifJ+F+yG9LPhHIZTpf
        i5xrFyW7geuAHyJes6dAmDuANVhjEiM9HFCd3FFg5D2quz9UXd4d8T1Mxu3osd1AW5V6gm3AaUX+YS4G
        BwCyZroNeBiYDZyEnID6T2Am8DOsLsFIjwP4MfAOcAayHt8EvIms+w/GcA+TcasD2AZ0VSFBqW2OX3YS
        EnXsjfihDgJv6VXIFGwv3UgPFUhP/pf1ipuRapMubAO68w1BWhz/uBnxcknRgwUJjfTQR3R5McUwWm3S
        hRa0IQjI/qRLWfDxwLgEH3gP1p7cSA/7VSeTYpzapMv9boTBNcMGZH1dLGOAaQk+8A7cMxgNIyr2qk4m
        xTTc8mY61OYPOYAtuBUF1eE+5QiTXcBq0zsjJaxWnUyKZtz6dLSqzR9yAO1I1LJYcsAM3KKOYdIFrMDi
        AEby9KkudiX0/T62uElt/tAfdQLrHb94HjA2QcH/EXjd9M9ImNdVF5NirNqiC+vV5g85gD4PB3Ay0WYE
        Ho0tSHZVktFXo7zpUR3ckuA9TFJbdHUAfYUOACRpwaXCrxGYk/AA/C+w3PTQSIjlqoNJMkdtsVj2qa0z
        1AG8A3zg8EG1uE89wqYD+C/gd6aLRsz8TnWvI+H7mIdbCvAHausfcQC7gbcdv3w+yXcJ3gJcD9xHcoEY
        o3zoUl27nmSn/qjtzXf8m7cpqEsodAAdwFrHD5tLsnGAPNuAZcC3kVTM3oLns5Rhw5eKAhvpVd36tura
        thTc3yS1QRfWUjBrqTrCP/ZQfFnhscAC3AOIUdAJPAD8GfgscAFSRJT0FM3ILh3Aq8ia+f+Q7b4dKbq/
        BWqDxdLDkJf8UAfwBpIkUOxbvQZYBDxCemr3dyDBmUeRHmm2S2D48nvgKSTTL22p5zm1PZceAK1q44d9
        SCFbKQgQFMlZwDEpHLz9SHZWu+mx4Um76lAa606OUdtz4R218WEdQBvwkuOHnoxkIhmGER8zcN//f4kh
        J4EdKX3wRdzWzY3Ap208DCNWPo3b/n+H2jZHcwBrGDJNOAoVSNCtVLv4GkbaGKM257LDtVVt+6gOYBfw
        iuMNnQ7MsnExjFiYpTbnwiscoWLxSA5gP7JWcKm0m4B4JMMwouezanPF0qc2vb8YBwBycIXrfufnyNbJ
        wd0xfL6VKwcn6iO14tCFMKlXW3NhB8McRjOcA9iAe3PD04BTMiTI3REb6G6ib5paDvQSbUvtPqJv2R0m
        p1B8B+88L6tNF+0AuoBnHA1kHHBRhgTZQrSefxuWhBQGPUSbdtuNe1PcJLkIt36cfWrLXS4OAOA53A9r
        vJh4zgwIgzciHPh83rgd/hmcAQ6v7wibFoZkx6WYyWpjLmxXW8bVAWwEVjp+2SzgnIwIcztH2BcNia0e
        sjOGZyVuW9MuvEh2TiU+B/fdtpV8zKnEH+cAupHCGpdTTWqAf8WtPjkp9gMPAR9G8NmPApvNbkNjs8o0
        bD5UHchCi/latS2X3P+DasPeS92TkUq/AYdrO1KllAVGIrXdAyFeb2Kp0VEwQ2Ub5ljdpzqQBRaobbk8
        33rc04UPowq4x0Owt5OdOvwZyB5pGAr1IXCF2WpkXKEyDmOsVgKfyMhzV6hNuT7jPXy04teZC5ACApcv
        fotkDw5x5dMEf7vsA24KQ+DGsFSpjPcFHKu3gbMz9NzT1KZcnrFNbTcwjUgjBJcv70O6pmSJTwLPeirU
        VuCbZGc6mWVGqqy3eo7Vc0gdfZZYpjbl8pwrcCsW+li+63EDLwETMyboE4AfIUGnYp6xHWmGcjbWeixO
        KlTmj+gYFDNWm3VsT8zYs07EfYnapzYbGjORTCKXm+gBlmZQuXJIocWtSAT1feTgx3ako8oOpE3U3cC/
        kOwpyeXOaB2Du3VMdugYteuYva9jeKuOaS6Dz7hUbcnF9jaozYZGJfAT3KdbTxPiNCQBxiLnri0CLgTO
        RfoMNmVUmUqVnI7JbB2jC3XMmkn29KqgNKoNudrdT9RmQ2UxUk7ociNdwBLTT8PwYonakIvN7VJbDZ0a
        4EHcvdEK3HKXDcMQm3ENvg+ojdZEdVMXU3zQpTAWcLWNp2E4cTXua/923GsFnKhH2iS7eqXnkTWaYRhH
        p0ltxtXOniKGnhxLkNxilxvrBa61cTWMorhWbcbFxrqJKd52DFJf7Oqd1iJRWcMwhqdZbcXVvp4hxvM5
        rkCO4nK9yTuIYHvCMEqESrURV7vqJOYalAb8YgEtZC8N0zDiYpHaiM/avyHum/0qctiA680uJ/kjxQ0j
        bdSpbbjaU4faYuyMBR73vGFLDjKMw1mC3wv1cRLMdrwQv/rsVcB0G3PDALWFVR529KHaYGKMBO71uPEB
        4C6g2sbeKHOq1RZ8bOheUlCCfhrSdNDHe11i42+UOZfgN4veiPv5AJFQAdyCe7+AAeAF4HjTAaNMOV5t
        wNVu+tTmUtODYgqDffBdrn7gTmwpYJQf1ar7/R5287LaXKq4Cr8o5l7gctMHo8y4XHXfZxftqjQ+UB1w
        P37BjNeRZg6GUQ7MVp33sZX7SXEezXxgneeDLSfb3VsMoxjG4pfwM6C2NT/tD3gd7pVM+YrB72OttozS
        Jac67msf12XhIRuAx/DzcLuAS01PjBLlUtzb6uWvx0gg39+XxRTfWvtIZcOpn+YYhiPz8Svzzbc0X5y1
        B74B95ZG+euPWAcho3RoUp32sYUetaXMMQZ4wPOh+4Afk41Thg3j46hVXfZJlBtQGxqT1YefBazxfPAu
        4EasgYiRXSpVh11be+evNWpDmeYy5LQWHwHsIaVJD4ZRBFepDvvofqvaTuapRtoc+U6BthDSKaeGESMX
        qO76LoHvoIRS5CfgvzWY3xlYaDplZISF+Ef881t+E0pNKHOA1QGE8iIw13TLSDlzVVd99Xy12kpJcjFy
        gquvcJ4l5FNPDSNEZqqO+ur3DiI+2SdpcsAy3A8WGXrisJ0vYKSNZvxO8i082GMZZZAKXwf8FP+g4ADw
        BHCi6ZyREk5UnfTV5z61ibLplt0EPBpAYHknYDMBI2maAxr/gNpC2WW+Tgf+GlBwT2MxASM5ZhJs2j+g
        NlC2HbIX4J8pWBgYtN0BI27mEizgl8/0W1DugjwPeC+gIF/E8gSM+FhIsK2+AdX580yUwmXAtoACXYtl
        DBrRcwHBknwGVNdLIs03LCqApfg3SyhMG74KKyAywqdSdcs3vbew6c1SUtTSOy3kgGvwOyRhaAHRjVgp
        sREetapTvoU9hYfhXIO1vRuWKuB6oC2goLuQGmxrKmIEpUl1ybekN3+1qW5XmUg/nmrE2wZ1An3Iyanz
        TKSGJ/NUh4IkreWN/0bsABwnJ3A9wZcD+a2WS7Bpl1E8OdWZoFvU+Wn/9Wb87lQh66WggcEBYCfwPTLc
        WsmIjTGqKztD0LtdqsM27fckh0RMg24R5psrPgicYmI1huEU1RHfZrZDt/qWYjPPwFQge6bvhTAo+XyB
        r2FTMmOQatWJoPv7hUk+l2FbfaFyHuGsyfIHkt6JHU1uiA7cid9BncPFnCzDLyIWELyAqPBo8heQYI/N
        BsqPah37F/A7onu4wp6yz+2PmulI+WTQrZnCKO1dlHFFVpnq0F2Es8uU33J+1HQoPpqQBgpBOgsNvVYB
        SyijpgxlSJ2O8aoQ9aZbddGSzhIYzGUE6zE49OpAjm5ehNUTlBKVOqbLdYzD0pcdqoP20kiIHNJEcXWI
        gzoAtCB92a3jUPZp1rFsCVlHVqvu2TZfCpiD9FIPKy5QuGV4LTa9yyJNOnZhbe0Vrvcfo4Rbd2eVCYin
        9z2GbLirF3geuBoYZ2JOPeN0rJ7XsQtTF1pVx0ru0I5SoRpJwAgrX2BoJuEKJIjUaKJOHY06NisIJ5Pv
        SPv7l2FbxplgFnKschSK0IU0glwKTDRRJ85EHYunCV6yO5zjf4ASOKW33BgD3ABsjkAp8orxEhIFnoal
        fcZJhcp8mY5BFI5+QHXnBqyILNMsBv5A+OvBwqDQW8DtwBlYJ6IoqVUZ364yDzvoWxj3+YPqjlECNCA1
        2e9GpDD5azvwMHAlMNnEHhqTVaYPq4yjHMN3VVcaTOylx6nIeq4zYiXqRrLNbkMSUOpN9M7Uq+xuU1mG
        mfV5pKtTdeNUE31pU4cEjV4huilk4bUb+DNwM9JP3taTwzNGZXSzymx3DOPTp7qwFMvoKyumAj8ANsWg
        ZIWdiZ4CbkLWl+Mp7+BhhcpgscrkKcLpxFPstUl1YGo5D0A5UwGchmSMfYX41n35pJJ3gZVIJPtVZH3b
        WeIyrwMmIWWzi4CzgJORffy49HEv8FvgHuA1HQ9zAGVMDfA54DvAucQ/FexBCkteRxJO1gJvqENoR+rV
        s0gOGKsGPwfpsjsfOVfvWJV7nHQi5/n9DPiLyr2sMQdwOPXA+Ugjx8+Q3JZeN4MzhLXAOmA9sBE5nKID
        2apKEyOB0Ugq7jSkCGeGGn3+DZ+kPF8AfokkDLWZqpsD+DgagQuBbyDr05qE76cfeXvtA95XZ7AJaTy5
        DZkp7CxwDAf06gvp+yuBEXrlDX0i8mafrNdJavTHI8G8OpKvlOtBDvH8FRJfaDXVNgfgwjjgIiTHfDHp
        i+D3I2+3HiQNdpdee5G3XP5nmzqQvGPYX/A7BcZdXfB7HTIjqkdiI/mfTXqNQhxjbQoMfSj71PAfBJ5E
        Zk2GOQBv6oGzkWSUz5O9arA+vfoZ7H+X/x014JzqQ/73SrLXFOUD4BngN0g1oE31zQGESg0Svb4CaQZx
        AtYQImn6kZz9J4CHkN2Usg/umQOIlkokwPUF4IvA6Ui024iPdiRD8HHgT0igtK+sJWIOIBEagU+qIzgf
        mRXYUVDRcBB52z+thv8PLLBnDiAlVCHbX+ciB0OchUTJrbloMPqQXY6VSHrws8h26EETjTmAtFKrzuAc
        JGh4JpL4Ys6geKPfAbyMBPWeU6PvNtGYA8gao5ADIz6FpL4uBKYge+nGIB3AVqQw5yXg78AGZHvTMAdQ
        ElQje+jzkbyCRcBMJI6QdLJR3PQg6/d31OBfRNKgdyF5CoY5gJKnHpkN5PPk5yG95yZQemXD+5B9+reR
        9OZ8vcNWbL/eHIAByLJgPDIrmI2k1jYjabaN+u9p70q7H5nOtyLpyuv1ehN52+/WfzfMARhHoRJJyR2L
        1KxPR4KLxzGYgz+ewbTckUS/BXkQqTfIpx/vZrAmoQUJ1m0AtiB79Z3Y/rw5ACNURiA7DaOQZcRxyFJi
        IjJTaNCrUa96dQ7VBVc+9x8GawP2F1y9yNS8Va+9erUihUdb1eDb1BF0M1hbYGSE/werfQzambQ9dgAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>